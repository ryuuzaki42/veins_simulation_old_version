//
// Generated file, do not edit! Created by nedtool 4.6 from modules/messages/FloodingMessage.msg.
//

#ifndef _FLOODINGMESSAGE_M_H_
#define _FLOODINGMESSAGE_M_H_

#include <omnetpp.h>

// nedtool version check
#define MSGC_VERSION 0x0406
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of nedtool: 'make clean' should help.
#endif



// cplusplus {{
    #include <list>
	#include "WaveShortMessage_m.h"
// }}

/**
 * Class generated from <tt>modules/messages/FloodingMessage.msg:10</tt> by nedtool.
 * <pre>
 * message FloodingMessage extends WaveShortMessage
 * {
 *     unsigned int srcAddr;
 *     unsigned int msgId;
 *     // TODO
 * }
 * </pre>
 */
class FloodingMessage : public ::WaveShortMessage
{
  protected:
    unsigned int srcAddr_var;
    unsigned int msgId_var;

  private:
    void copy(const FloodingMessage& other);

  protected:
    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const FloodingMessage&);

  public:
    FloodingMessage(const char *name=NULL, int kind=0);
    FloodingMessage(const FloodingMessage& other);
    virtual ~FloodingMessage();
    FloodingMessage& operator=(const FloodingMessage& other);
    virtual FloodingMessage *dup() const {return new FloodingMessage(*this);}
    virtual void parsimPack(cCommBuffer *b);
    virtual void parsimUnpack(cCommBuffer *b);

    // field getter/setter methods
    virtual unsigned int getSrcAddr() const;
    virtual void setSrcAddr(unsigned int srcAddr);
    virtual unsigned int getMsgId() const;
    virtual void setMsgId(unsigned int msgId);
};

inline void doPacking(cCommBuffer *b, FloodingMessage& obj) {obj.parsimPack(b);}
inline void doUnpacking(cCommBuffer *b, FloodingMessage& obj) {obj.parsimUnpack(b);}


#endif // ifndef _FLOODINGMESSAGE_M_H_

